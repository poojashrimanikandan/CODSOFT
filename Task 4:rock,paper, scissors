import tkinter as tk
import random
from tkinter import messagebox

class RockPaperScissorsGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Rock-Paper-Scissors Game")
        self.root.geometry("400x300")

        self.choices = ["Rock", "Paper", "Scissors"]
        self.user_score = 0
        self.computer_score = 0

        self.create_widgets()

    def create_widgets(self):
        self.title_label = tk.Label(self.root, text="Rock-Paper-Scissors", font=("Arial", 20))
        self.title_label.pack(pady=10)

        self.score_label = tk.Label(self.root, text="Your Score: 0 | Computer Score: 0", font=("Arial", 14))
        self.score_label.pack(pady=10)

        self.result_label = tk.Label(self.root, text="", font=("Arial", 12))
        self.result_label.pack(pady=10)

        self.button_frame = tk.Frame(self.root)
        self.button_frame.pack(pady=20)

        self.rock_button = tk.Button(self.button_frame, text="Rock", width=10, height=2, command=lambda: self.play_game("Rock"))
        self.rock_button.grid(row=0, column=0, padx=10)

        self.paper_button = tk.Button(self.button_frame, text="Paper", width=10, height=2, command=lambda: self.play_game("Paper"))
        self.paper_button.grid(row=0, column=1, padx=10)

        self.scissors_button = tk.Button(self.button_frame, text="Scissors", width=10, height=2, command=lambda: self.play_game("Scissors"))
        self.scissors_button.grid(row=0, column=2, padx=10)

        self.reset_button = tk.Button(self.root, text="Play Again", width=20, command=self.reset_game)
        self.reset_button.pack(pady=10)

        self.exit_button = tk.Button(self.root, text="Exit", width=20, command=self.root.quit)
        self.exit_button.pack(pady=5)

    def play_game(self, user_choice):
        computer_choice = random.choice(self.choices)
        result = self.determine_winner(user_choice, computer_choice)
        
        self.result_label.config(text=f"Computer chose: {computer_choice}\n{result}")
        self.update_scores(result)

    def determine_winner(self, user_choice, computer_choice):
        if user_choice == computer_choice:
            return "It's a tie!"
        elif (user_choice == "Rock" and computer_choice == "Scissors") or \
             (user_choice == "Scissors" and computer_choice == "Paper") or \
             (user_choice == "Paper" and computer_choice == "Rock"):
            return "You win!"
        else:
            return "You lose!"

    def update_scores(self, result):
        if result == "You win!":
            self.user_score += 1
        elif result == "You lose!":
            self.computer_score += 1
        self.score_label.config(text=f"Your Score: {self.user_score} | Computer Score: {self.computer_score}")

    def reset_game(self):
        self.user_score = 0
        self.computer_score = 0
        self.score_label.config(text="Your Score: 0 | Computer Score: 0")
        self.result_label.config(text="")
        messagebox.showinfo("Game Reset", "The game has been reset! Play again.")
root = tk.Tk()
game = RockPaperScissorsGame(root)
root.mainloop()
